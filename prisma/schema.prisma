generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bio       String?  // Tambahkan bio (opsional)
  image     String?  // Tambahkan foto profil (opsional)

  // relasi
  posts     Post[]
  replies   Reply[]
  likes     Like[]
  
  // Follow
  followers Follow[] @relation("followers")
  following Follow[] @relation("following")
}

model Follow {
  id           Int    @id @default(autoincrement())
  followerId   Int
  followingId  Int

  follower     User   @relation("following", fields: [followerId], references: [id])
  following    User   @relation("followers", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}



model Post {
  id        Int      @id @default(autoincrement())
  content   String
  image     String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  replies Reply[]
  likes Like[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())

  @@unique([userId, postId]) // user hanya boleh like 1x
}

